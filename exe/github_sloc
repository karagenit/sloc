#!/usr/bin/env ruby

require "octokit"
require "net/http"
require "uri"

totala = 0
totald = 0
totalc = 0

print "Username: "
uname = gets.chomp
print "Password: "
pword = gets.chomp

octoclient = Octokit::Client.new(:login => uname, :password => pword)

auth = octoclient.create_authorization(:scopes => ["repo"], :note => "SLOC Script")
authid = auth.attrs[:id]
token = auth.attrs[:token]

query = Hash.new
path = File.expand_path('../lib/github_sloc/query.json', File.dirname(__FILE__))
puts path
query['query'] = IO.read(path)
query['variables'] = Hash.new
query['variables']['user'] = uname
query = query.to_json

uri = URI.parse("https://api.github.com/graphql")

http = Net::HTTP.new(uri.host, uri.port)
http.use_ssl = true

request = Net::HTTP::Post.new(uri)
request['Authorization'] = "bearer #{token}"
request['Content-type'] = "application/json"
request.body = query

data = JSON.parse(http.request(request).body)

printf "----------\n%-40s %-10s %-10s %-10s\n----------\n", "Repository", "Adds", "Dels", "Commits"

data['data']['user']['contributedRepositories']['edges'].each do |edge|
    repo = edge['node']['nameWithOwner']
    stats = octoclient.contributors_stats(repo)
    a = 0
    d = 0
    c = 0
    if stats == nil
        next
    end
    stats.each do |stat|
        if stat[:author][:login] == uname
            stat[:weeks].each do |week|
                a = a + week[:a]
                d = d + week[:d]
                c = c + week[:c]
            end
        end
    end
    printf "%-40s %-10s %-10s %-10s\n", repo, "(+#{a})", "(-#{d})", "(:#{c})"
    totala = totala + a
    totald = totald + d
    totalc = totalc + c
end

printf "----------\n%-40s %-10s %-10s %-10s\n", "Total", "(+#{totala})", "(-#{totald})", "(:#{totalc})"

octoclient.delete_authorization(authid)
